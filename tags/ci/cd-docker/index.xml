<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CI/CD, Docker on Ovaar - Software engineering blog</title>
    <link>https://ovaar.github.io/tags/ci/cd-docker/</link>
    <description>Recent content in CI/CD, Docker on Ovaar - Software engineering blog</description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="https://ovaar.github.io/tags/ci/cd-docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Deploying a Blog with GitHub Actions, Docker, and Submodules</title>
      <link>https://ovaar.github.io/blog/github-actions-deploy-with-permissions/</link>
      <pubDate>Fri, 31 Jan 2025 00:00:00 +0000</pubDate>
      
      <guid>https://ovaar.github.io/blog/github-actions-deploy-with-permissions/</guid>
      <description>&lt;h2 id=&#34;-deploying-a-blog-with-github-actions-docker-and-submodules&#34;&gt;ðŸš€ Deploying a Blog with GitHub Actions, Docker, and Submodules&lt;/h2&gt;
&lt;h3 id=&#34;-problem-statement&#34;&gt;ðŸ“Œ Problem Statement&lt;/h3&gt;
&lt;p&gt;If youâ€™re using GitHub Actions to &lt;strong&gt;build and deploy a static blog&lt;/strong&gt; that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Runs inside &lt;strong&gt;Docker&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Pushes generated content to a &lt;strong&gt;GitHub Pages submodule&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Requires &lt;strong&gt;Git authentication&lt;/strong&gt; to commit and push changes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then, you might run into permission issues, especially when pushing to submodules.&lt;/p&gt;
&lt;p&gt;This guide walks you through setting up &lt;strong&gt;GitHub Actions&lt;/strong&gt; to automatically deploy your blog &lt;strong&gt;without permission errors&lt;/strong&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-step-1-set-up-a-github-personal-access-token-pat&#34;&gt;âœ… Step 1: Set Up a GitHub Personal Access Token (PAT)&lt;/h2&gt;
&lt;p&gt;GitHubâ€™s default &lt;code&gt;GITHUB_TOKEN&lt;/code&gt; &lt;strong&gt;cannot push&lt;/strong&gt; to repositories requiring extra permissions (like GitHub Pages). You need a &lt;strong&gt;Personal Access Token (PAT)&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&#34;-generate-a-pat&#34;&gt;ðŸ”¥ Generate a PAT&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Go to GitHub Settings â†’ Developer Settings â†’ Personal Access Tokens â†’ Fine-grained tokens&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;&amp;ldquo;Generate new token&amp;rdquo;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Set &lt;strong&gt;Expiration&lt;/strong&gt;: Recommended &lt;strong&gt;No Expiration&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Repository access&lt;/strong&gt;: Select &lt;strong&gt;both&lt;/strong&gt; repositories (your main repo and GitHub Pages repo)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Permissions&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;âœ… &lt;code&gt;Contents: Read &amp;amp; Write&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;âœ… &lt;code&gt;Workflows: Read &amp;amp; Write&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;Generate Token&lt;/strong&gt; and &lt;strong&gt;copy the token&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;-add-gh_pat-to-github-secrets&#34;&gt;ðŸ”¥ Add &lt;code&gt;GH_PAT&lt;/code&gt; to GitHub Secrets&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Go to &lt;strong&gt;GitHub Repo â†’ Settings â†’ Secrets and Variables â†’ Actions&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;New repository secret&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Name it &lt;strong&gt;&lt;code&gt;GH_PAT&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Paste the copied token&lt;/li&gt;
&lt;li&gt;Repeat steps for each submodule repository that requires access.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-step-2-configure-github-actions-workflow&#34;&gt;âœ… Step 2: Configure GitHub Actions Workflow&lt;/h2&gt;
&lt;p&gt;Create &lt;code&gt;.github/workflows/deploy.yml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Deploy Blog&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;on&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;push&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;branches&lt;/span&gt;:
      - &lt;span style=&#34;color:#ae81ff&#34;&gt;main &lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Adjust if needed&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;workflow_dispatch&lt;/span&gt;:  &lt;span style=&#34;color:#75715e&#34;&gt;# Allows manual triggering&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;jobs&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;deploy&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;runs-on&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ubuntu-latest&lt;/span&gt;

    &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Checkout repository&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/checkout@v4&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:
          &lt;span style=&#34;color:#f92672&#34;&gt;submodules&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Ensures submodules are initialized and updated&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;fetch-depth&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;token&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ secrets.GH_PAT }}&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# ðŸ”¥ Ensures submodules use PAT&lt;/span&gt;

      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Submodule cleanup fix &lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Bodge for https://github.com/actions/checkout/issues/358&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: |&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          git submodule foreach --recursive git clean -ffdx
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          git submodule foreach --recursive git reset --hard
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;          git submodule foreach --recursive git checkout -f master&lt;/span&gt;          

      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Run docker compose&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;docker compose up blog&lt;/span&gt;
      
      - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;stefanzweifel/git-auto-commit-action@v5&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:
          &lt;span style=&#34;color:#f92672&#34;&gt;repository&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;public&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;branch&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;master&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Adjust if needed&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;push_options&lt;/span&gt;: --&lt;span style=&#34;color:#ae81ff&#34;&gt;force&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;create_branch&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;-step-3-push-and-test&#34;&gt;âœ… Step 3: Push and Test&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Commit and push changes&lt;/strong&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;git add .
git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Set up GitHub Actions deployment&amp;#34;&lt;/span&gt;
git push origin main
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Trigger the workflow manually&lt;/strong&gt; (optional) from GitHub Actions.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Check GitHub Actions logs&lt;/strong&gt; for errors.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-summary&#34;&gt;ðŸŽ¯ Summary&lt;/h2&gt;
&lt;p&gt;âœ… Use a &lt;strong&gt;GitHub PAT&lt;/strong&gt; instead of &lt;code&gt;GITHUB_TOKEN&lt;/code&gt; for pushing to submodules.
âœ… Pass the &lt;strong&gt;PAT token&lt;/strong&gt; in &lt;code&gt;actions/checkout@v4&lt;/code&gt;.
âœ… &lt;strong&gt;Set Git credentials&lt;/strong&gt; in &lt;code&gt;deploy.sh&lt;/code&gt;.
âœ… Update submodule &lt;strong&gt;remote URLs&lt;/strong&gt; before pushing.&lt;/p&gt;
&lt;p&gt;Now, your blog should &lt;strong&gt;auto-deploy&lt;/strong&gt; whenever you push changes! ðŸš€&lt;/p&gt;
&lt;p&gt;Need help? Drop a comment below! ðŸ˜Š&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

